import org.gradle.api.tasks.compile.GroovyCompile

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://nexus.ala.org.au/content/groups/public/" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.10"
    }
}

version "4.0.0-SNAPSHOT"
group "au.org.ala.plugins.grails"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin:"maven-publish"

repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

springBoot {
    mainClassName = 'biocache.hubs.Application'
}


dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.0.10"
    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support"

    testImplementation group: 'org.spockframework', name: 'spock-spring', version: '1.3-groovy-2.5'
    implementation group: 'org.ehcache', name: 'ehcache', version: '3.1.0'
    testImplementation group: 'xml-apis', name: 'xml-apis', version: '1.4.01'

    def noCache = {
        exclude group: 'org.grails.plugins', module: 'cache'
        exclude group: 'org.ehcache', module: 'ehcache'
    }

    //jars
    compile "org.apache.httpcomponents:httpclient:4.5.6"
    compile 'com.maxmind.geoip2:geoip2:2.9.0'
    compile "org.apache.commons:commons-lang3:3.7"
    compile "org.apache.commons:commons-text:1.3"
    compile "net.sf.supercsv:super-csv:2.1.0"
    compile group: 'org.apache.lucene', name: 'lucene-queryparser', version: '8.5.1'
    compile "com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20180219.1"

    compile "au.org.ala:data-quality-filter-service-client:1.0.0", noCache
    compile 'xml-apis:xml-apis:1.4.01'

    //plugins
    compile 'org.grails.plugins:cache-ehcache:3.0.0.M1'
    compile 'org.grails.plugins:http-builder-helper:1.0.2.ALA'
    compile "org.grails.plugins:ala-admin-plugin:2.2"
    compile "org.grails.plugins:ala-auth:3.2.3"
    compile "au.org.ala.plugins.grails:images-client-plugin:1.4-SNAPSHOT"
    compile "au.org.ala.plugins.grails:ala-charts-plugin:2.2"

    compile "au.org.ala:userdetails-service-client:1.5.0"
    compile 'commons-fileupload:commons-fileupload:1.4'
}

bootRun {
    jvmArgs(
        '-Dspring.output.ansi.enabled=always',
        '-noverify',
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

assets {
    minifyJs = true
    minifyCss = true
    packagePlugin = true
}

publishing {
    repositories {
        maven {
            name 'Nexus'
            url "https://nexus.ala.org.au/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases' }"
            credentials {
                username = System.getenv('TRAVIS_DEPLOY_USERNAME')
                password = System.getenv('TRAVIS_DEPLOY_PASSWORD')
            }
        }
    }

    publications {
        mavenJar(org.gradle.api.publish.maven.MavenPublication) {
            pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}

                // simply remove dependencies without a version
                // version-less dependencies are handled with dependencyManagement
                // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
            from components.java
        }
    }
}
