buildscript {
    version "7.1.3-SNAPSHOT"
    group "au.org.ala.plugins.grails"
}

plugins {
    id "groovy"
    id "org.grails.grails-gsp"
    id "org.grails.grails-web"
    id "war"
    id "idea"
    id "com.bertramlabs.asset-pipeline"
    id "eclipse"
    id "maven-publish"
}

repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

bootWar {
    launchScript()
    dependsOn(compileGroovyPages)
}

war {
    dependsOn(compileGroovyPages)
}

// Set to true it needed only for development
// Inplace plugins ala-charts-plugin and images-client-plugin are defined in ala-hub configuration

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    def noCache = {
        exclude group: 'org.grails.plugins', module: 'cache'
        exclude group: 'org.ehcache', module: 'ehcache'
        exclude group: 'org.grails.plugins', module: 'cache-ehcache'
    }

    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-dependencies"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
//    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:cache:5.0.1-ALA"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:gsp"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.4.7"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.grails:grails-web-testing-support"

    testImplementation group: 'org.spockframework', name: 'spock-spring', version: '1.3-groovy-2.5'
    implementation 'org.ehcache:ehcache:3.1.0'
    testImplementation group: 'xml-apis', name: 'xml-apis', version: '1.4.01'

    implementation 'dk.glasius:external-config:3.1.1'
    //jars
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'com.maxmind.geoip2:geoip2:2.9.0'
    implementation "org.apache.commons:commons-lang3:3.7"
    implementation "org.apache.commons:commons-text:1.3"
    implementation "net.sf.supercsv:super-csv:2.1.0"
    implementation group: 'org.apache.lucene', name: 'lucene-queryparser', version: '8.5.1'
    implementation 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20211018.2'

    implementation "au.org.ala:data-quality-filter-service-client:1.0.0", noCache
    implementation 'xml-apis:xml-apis:1.4.01'

    //plugins
    implementation 'org.grails.plugins:cache-ehcache:3.0.0'
    implementation 'org.grails.plugins:http-builder-helper:1.0.2.ALA'
    implementation "org.grails.plugins:ala-admin-plugin:2.3.0"
    implementation "org.grails.plugins:ala-auth:$alaSecurityLibsVersion"
    implementation "org.grails.plugins:ala-ws-plugin:$alaSecurityLibsVersion"
    implementation "au.org.ala.plugins.grails:images-client-plugin:1.5-SNAPSHOT"
    implementation "au.org.ala.plugins.grails:ala-charts-plugin:2.3.0"

    implementation "au.org.ala:userdetails-service-client:$alaSecurityLibsVersion"
    implementation 'commons-fileupload:commons-fileupload:1.4'
}

springBoot {
    mainClass = 'biocache.hubs.Application'
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false
bootRun.enabled = false

assets {
    minifyJs = true
    minifyCss = true
    packagePlugin = true
}

publishing {
    repositories {
        maven {
            name 'Nexus'
            url "https://nexus.ala.org.au/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases' }"
            credentials {
                username = System.getenv('TRAVIS_DEPLOY_USERNAME')
                password = System.getenv('TRAVIS_DEPLOY_PASSWORD')
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
